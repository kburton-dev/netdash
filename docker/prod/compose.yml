x-app-volumes: &app-volumes
  - caddy_data:/data
  - caddy_config:/config
  - app_database:/app_database
  - app_stroage:/app/storage

services:
  app-web:
    image: 756127310626.dkr.ecr.eu-central-1.amazonaws.com/netdash:latest
    env_file: .env
    volumes: *app-volumes
    restart: unless-stopped
    hostname: netdash-web
    networks:
      - ingress_tunnel
    command: "php artisan octane:frankenphp"

  app-worker:
    image: 756127310626.dkr.ecr.eu-central-1.amazonaws.com/netdash:latest
    env_file: .env
    volumes: *app-volumes
    restart: unless-stopped
    command: "php artisan queue:work --tries=3 --timeout=90"

  app-scheduler:
    image: 756127310626.dkr.ecr.eu-central-1.amazonaws.com/netdash:latest
    env_file: .env
    volumes: *app-volumes
    restart: unless-stopped
    command: "php artisan schedule:work"

  app-migrate-db:
    image: 756127310626.dkr.ecr.eu-central-1.amazonaws.com/netdash:latest
    env_file: .env
    volumes: *app-volumes
    command: "php artisan migrate --force"

volumes:
  caddy_data:
  caddy_config:
  app_storage:
  app_database:

networks:
  ingress_tunnel:
    external: true
    name: ingress_tunnel_1